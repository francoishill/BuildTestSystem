<Window x:Class="BuildTestSystem.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local='clr-namespace:BuildTestSystem'
        xmlns:sharedclasses='clr-namespace:SharedClasses;assembly=_OwnAppsSharedDll'
        Name='mainWindow'
        Icon='app.ico'
        Title='Build test system'
        FontFamily='Comic Sans MS'
        FontSize='12'
        Height="250"
        Width='1300'
        WindowStartupLocation='CenterScreen'
        UseLayoutRounding='True'
        Loaded='Window_Loaded'>
    <Window.Resources>
        <!--<local:BoolToBrushConverter x:Key='boolToBrushConverter' />-->
        <local:StatusTypeToBrushConverter x:Key='statusTypeToBrushConverter' />
        <local:BoolToOpacityConverter x:Key='boolToOpacityConverter' />
        <local:NullableIntToIntConverter x:Key='nullableIntToIntConverter' />
        <local:NullableIntToBooleanConverter x:Key='nullableIntToBooleanConverter' />
        <local:NullableIntToVisibilityConverter x:Key='nullableIntToVisibilityConverter' />
        <!--<local:BuildAppListHasSelectedItemsConverter x:Key='buildAppListHasSelectedItemsConverter' />-->
        <sharedclasses:BooleanToVisibilityConverter x:Key='booleanToVisibilityConverter' />
        <LinearGradientBrush x:Key='ItemHoverBackgroundBrush'
                             StartPoint='0,0'
                             EndPoint='0,1'>
            <GradientStop Color='#55aaaaaa'
                          Offset='0' />
            <GradientStop Color='#55eeeeee'
                          Offset='0.7' />
            <GradientStop Color='#55aaaaaa'
                          Offset='1' />
        </LinearGradientBrush>
        <DrawingImage x:Key="overlayImageSucccess">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Green">
                            <GeometryDrawing.Geometry>
                                <EllipseGeometry  RadiusX='5'
                                                  RadiusY='5' />
                                <!--<RectangleGeometry Rect="0 0 16 16"
												   RadiusX="3"
												   RadiusY="3" />-->
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--<DrawingImage x:Key="overlayImageBuildFailed">-->
        <DrawingImage x:Key="overlayImageError">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Red">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 16 16"
                                                   RadiusX="3"
                                                   RadiusY="3" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--<DrawingImage x:Key="overlayImageNotUpToDate">-->
        <DrawingImage x:Key="overlayImageWarning">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Orange">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 16 16"
                                                   RadiusX="3"
                                                   RadiusY="3" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--<DrawingImage x:Key="overlayImageVersionControlChanges">
			<DrawingImage.Drawing>
				<DrawingGroup>
					<DrawingGroup.Children>
						<GeometryDrawing Brush="Red">
							<GeometryDrawing.Geometry>
								<RectangleGeometry Rect="0 0 16 16"
												   RadiusX="3"
												   RadiusY="3" />
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
					</DrawingGroup.Children>
				</DrawingGroup>
			</DrawingImage.Drawing>
		</DrawingImage>-->
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>
    <DockPanel LastChildFill='True'
               Background='Transparent'>
        <Border Margin='15 10'
                DockPanel.Dock='Bottom'
                BorderThickness='1'
                BorderBrush='#555'
                CornerRadius='10'
                Padding='10'>
            <StackPanel>
                <ProgressBar Name='progressBarIndeterminate'
                             Height='15'
                             IsIndeterminate='True'
                             Visibility='Hidden' />
                <DockPanel LastChildFill='True'>
                    <TextBlock Text='About'
                               DockPanel.Dock='Right'
                               Foreground='Gray'
                               Margin='5 0 0 0'
                               Cursor='Hand'
                               MouseLeftButtonUp='TextblockAboutMouseLeftButtonUp' />
                    <Button DockPanel.Dock='Right'
                            Background='Transparent'
                            Foreground='CadetBlue'
                            Padding='0'
                            Opacity='0.7'
                            FontSize='10'
                            FontWeight='Bold'
                            Content='_Clear'
                            Click='Button_Click' />
                    <!--Visibility='{Binding Path=Text.Length, ElementName=statusLabel}'/>-->
                    <TextBlock Name='statusLabel' />
                </DockPanel>
            </StackPanel>
        </Border>
        <Grid Name='mainContent'
              Margin='15 15 15 0'>
            <Grid.RowDefinitions>
                <RowDefinition Height='30' />
                <RowDefinition Height='auto' />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row='0'
                        Orientation='Horizontal'>
                <Button Name='buttonObtainApplicationList'
                        Content='Obtain application list'
                        Background='Transparent'
                        BorderBrush='#aaa'
                        VerticalAlignment='Top'
                        Click='buttonObtainApplicationList_Click' />
                <Button Name='buttonBuildAll'
                        Content='Build all'
                        Background='Transparent'
                        BorderBrush='#aaa'
                        Margin='10 0 0 0'
                        VerticalAlignment='Top'
                        Width='75'
                        Click='buttonBuildAll_Click' />
                <Button Name='buttonCheckForUpdatesAll'
                        Content='Check all for updates'
                        Background='Transparent'
                        BorderBrush='#aaa'
                        Margin='10 0 0 0'
                        VerticalAlignment='Top'
                        Width='130'
                        Click='buttonCheckForUpdatesAll_Click' />
                <Button Name='buttonCheckVersioningStatus'
                        Content='Check versioning status'
                        Background='Transparent'
                        BorderBrush='#aaa'
                        Margin='10 0 0 0'
                        VerticalAlignment='Top'
                        Width='153'
                        Click='buttonCheckVersioningStatusAll_Click' />
                <Button Content='Test'
                        Background='Transparent'
                        BorderBrush='#aaa'
                        Margin='10 0 0 0'
                        VerticalAlignment='Top'
                        Click='buttonTestClick' />
            </StackPanel>
            <StackPanel Grid.Row='0'
                        Orientation='Horizontal'
                        VerticalAlignment='Top'
                        HorizontalAlignment='Right'>
                <TextBlock Name='textblockSelectedCount'
                           Foreground='#aaa'
                           VerticalAlignment='Center' />
                <Button Name='buttonSelectAll'
                        Content='Select all'
                        Background='Transparent'
                        Foreground='Green'
                        Margin='5 0 0 0'
                        Click='ButtonSelectAllClick' />
                <Button Name='buttonSelectVisible'
                        Content='Select visible'
                        Background='Transparent'
                        Foreground='Purple'
                        Margin='5 0 0 0'
                        Click='ButtonSelectVisibleClick' />
                <Button Name='buttonUnselectAll'
                        Content='Unselect all'
                        Background='Transparent'
                        Foreground='CadetBlue'
                        Margin='5 0 0 0'
                        Visibility='Hidden'
                        Click='ButtonUnselectAllClick' />
            </StackPanel>
            <Border Grid.Row='1'
                    BorderThickness='1'
                    BorderBrush='#777'
                    CornerRadius='5'
                    Padding='5'
                    Opacity='0.5'>
                <StackPanel Grid.Row='1'
                            Orientation='Vertical'
                            HorizontalAlignment='Left'>
                    <StackPanel Orientation='Horizontal'>
                        <RadioButton DockPanel.Dock='Top'
                                     Content='All'
                                     GroupName='Selections'
                                     Name='radionButtonShowAll'
                                     IsChecked='True'
                                     Click='RadioButtonShowAllClick' />
                        <RadioButton Content='Selected'
                                     GroupName='Selections'
                                     Name='radioButtonShowSelected'
                                     Margin='30 0 0 0'
                                     Click='RadioButtonShowSelectedClick' />
                        <RadioButton Content='Unselected'
                                     GroupName='Selections'
                                     Name='radioButtonShowUnselected'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowUnselectedClick' />
                    </StackPanel>
                    <StackPanel Orientation='Horizontal'
                                Margin='0 5 0 0'>
                        <!--<Label Padding='0'>Statusses</Label>-->
                        <RadioButton Content='Normal'
                                     GroupName='Selections'
                                     Name='radioButtonShowNormal'
                                     Click='RadioButtonShowNormalClick' />
                        <RadioButton Content='Non-normal'
                                     GroupName='Selections'
                                     Name='radioButtonShowNonnormal'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowNonnormalClick' />
                        <RadioButton Content='Queued'
                                     GroupName='Selections'
                                     Name='radioButtonShowQueued'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowQueuedClick' />
                        <RadioButton Content='Busy'
                                     GroupName='Selections'
                                     Name='radioButtonShowBusy'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowBusyClick' />
                        <RadioButton Content='Success'
                                     GroupName='Selections'
                                     Name='radioButtonShowSuccess'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowSuccessClick' />
                        <RadioButton Content='Warnings'
                                     GroupName='Selections'
                                     Name='radioButtonShowWarnings'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowWarningsClick' />
                        <RadioButton Content='Errors'
                                     GroupName='Selections'
                                     Name='radioButtonShowErrors'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowErrorsClick' />
                    </StackPanel>
                    <StackPanel Orientation='Horizontal'
                                Margin='0 5 0 0'>
                        <!--<Label Padding='0'>Properties</Label>-->
                        <RadioButton Content='Analysed'
                                     GroupName='Selections'
                                     Name='radioButtonShowAnalysed'
                                     Click='RadioButtonShowAnalysedClick' />
                        <RadioButton Content='Unanalysed'
                                     GroupName='Selections'
                                     Name='radioButtonShowUnanalysed'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowUnanalysedClick' />
                        <RadioButton Content='Downloadable'
                                     GroupName='Selections'
                                     ToolTip='Is part of the Allowed list which is downloadable from the website.'
                                     Name='radioButtonShowDownloadable'
                                     Margin='30 0 0 0'
                                     Click='RadioButtonShowDownloadableClick' />
                        <RadioButton Content='Non-downloadable'
                                     GroupName='Selections'
                                     Name='radioButtonShowNondownloadable'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowNondownloadableClick' />
                        <RadioButton Content='Installed'
                                     GroupName='Selections'
                                     Margin='30 0 0 0'
                                     Click='RadioButtonShowInstalledClick' />
                        <RadioButton Content='Uninstalled'
                                     GroupName='Selections'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowUninstalledClick' />
                        <RadioButton Content='Version controlled'
                                     GroupName='Selections'
                                     Margin='30 0 0 0'
                                     Click='RadioButtonShowVersioncontrolledClick' />
                        <RadioButton Content='Unversion controlled'
                                     GroupName='Selections'
                                     Margin='10 0 0 0'
                                     Click='RadioButtonShowUnversioncontrolledClick' />
                    </StackPanel>
                </StackPanel>
            </Border>
            <WrapPanel Grid.Row='1'
                       Orientation='Horizontal'
                       VerticalAlignment='Top'>

            </WrapPanel>
            <TreeView Grid.Row='2'
                      Name='tmpMainTreeview'
                      BorderThickness='0'
                      FontSize='14'
                      ScrollViewer.CanContentScroll='False'
                      Margin='0,4,0,-4'>
                <TreeView.ItemTemplate>
                    <DataTemplate>
                        <Border Name='borderMainItemBorder'
                                Background='{Binding CurrentStatus, Converter={StaticResource statusTypeToBrushConverter}}'
                                BorderThickness='1'
                                BorderBrush='#44888888'
                                Margin='0 15 30 15'
                                Padding='3'
                                CornerRadius='5'
                                Focusable='False'
                                VerticalAlignment='Top'
                                MouseLeftButtonDown='BorderMainItemBorderMouseLeftButtonDown'>
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header='Building'>
                                        <MenuItem Header='Rebuild'
                                                  Click='contextmenuitemRebuildThisApplication' />
                                        <MenuItem Header='Open with C# express'
                                                  Click='contextmenuOpenWithCSharpExpress' />
                                    </MenuItem>
                                    <MenuItem Header='Publish/update'>
                                        <MenuItem Header='Publish Online'
                                                  Click='contextmenuPublishOnline' />
                                        <MenuItem Header='Publish Online (do not run)'
                                                  ToolTip='Will publish and install (silently) the application locally but will not run it afterwards.'
                                                  Click='contextmenuPublishOnlineButDoNotRunAfterInstallingSilently' />
                                        <MenuItem Header='Check for updates'
                                                  Click='ContextmenuCheckForUpdates' />
                                        <!--Visibility='{Binding IsInstalled,Mode=OneWay,Converter={StaticResource booleanToVisibilityConverter}}' />-->
                                        <MenuItem Header='Install latest version (silently)'
                                                  Click='ContextmenuInstallLatestVersion' />
                                        <Separator />
                                        <MenuItem Header='Get change logs (only after previous publish)'
                                                  Click='contextmenuitemGetChangeLogs_OnlyAfterPreviousPublish_Click' />
                                        <MenuItem Header='Get change logs (from beginning of time)'
                                                  Click='ContextmenuitemGetChangeLogsAllClick' />
                                    </MenuItem>
                                    <MenuItem Header='Git'>
                                        <MenuItem Header='Status'
                                                  Click='ContextmenuCheckGitChanges' />
                                        <MenuItem Header='Pull'
                                                  Click='ContextmenuGitPull' />
                                        <MenuItem Header='Show log'
                                                  Click='ContextmenuShowGitLog' />
                                        <MenuItem Header='Commit locally (same message)'
                                                  ToolTip='Get prompted for the commit message and use this message for all selected apps'
                                                  Click='ContextmenuGitCommitLocallySameMessage' />
                                        <MenuItem Header='Commit locally'
                                                  Click='ContextmenuGitCommitLocallyChanges' />
                                        <MenuItem Header='Push (default remote)'
                                                  Click='ContextmenuGitPush' />
                                        <!--Visibility='{Binding IsInstalled,Mode=OneWay,Converter={StaticResource booleanToVisibilityConverter},ConverterParameter=opposite}'/>-->
                                    </MenuItem>
                                    <MenuItem Header='Messages'>
                                        <MenuItem Header='_Clear messages'
                                                  Click='ContextmenuitemClearMessagesClick' />
                                    </MenuItem>
                                    <!--<MenuItem Header='Testing'
											  Visibility='{Binding IsFrancoisPc, Converter={StaticResource booleanToVisibilityConverter}}'>
										<MenuItem Header='Create HTML page'
												  Click='test_contextmenuitemCreateHtmlPage_Click' />
									</MenuItem>-->
                                </ContextMenu>
                            </Border.ContextMenu>
                            <DockPanel LastChildFill='True'
                                       MaxWidth='800'>
                                <StackPanel Orientation='Vertical'>
                                    <ProgressBar Height='10'
                                                 Width='100'
                                                 HorizontalAlignment='Stretch'
                                                 Value='{Binding CurrentProgressPercentage,Mode=OneWay,Converter={StaticResource nullableIntToIntConverter}}'
                                                 IsIndeterminate='{Binding CurrentProgressPercentage,Mode=OneWay,Converter={StaticResource nullableIntToBooleanConverter},ConverterParameter=opposite}'
                                                 Visibility='{Binding CurrentProgressPercentage,Mode=OneWay,Converter={StaticResource nullableIntToVisibilityConverter},ConverterParameter=HideInsteadOfCollapse}'
                                                 Margin='10 0'
                                                 Padding='0' />
                                    <StackPanel DockPanel.Dock='Top'
                                                Orientation='Horizontal'>
                                        <Image Source='{Binding ApplicationIcon}'
                                               Width='16' />
                                        <Label Content='{Binding ApplicationName}' />
                                    </StackPanel>
                                    <StackPanel Orientation='Horizontal'
                                                Margin='15 0 0 0'>
                                        <Image Width='24'
                                               Source='/BuildTestSystem;component/Resources/greenshield.ico'
                                               ToolTip='Application installed status'
                                               Opacity='{Binding IsInstalled,Mode=OneWay,Converter={StaticResource boolToOpacityConverter}}' />
                                        <Image Width='24'
                                               Source='/BuildTestSystem;component/Resources/greentick.ico'
                                               ToolTip='Version controlled status'
                                               Opacity='{Binding IsVersionControlled,Mode=OneWay,Converter={StaticResource boolToOpacityConverter}}' />
                                        <CheckBox Name='checkboxIsSelected'
                                                  Content='Selected'
                                                  IsChecked='{Binding IsSelected, Mode=TwoWay}'
                                                  Margin='5 0 0 0'
                                                  FontSize='10'
                                                  FontWeight='Bold'
                                                  Foreground='DarkViolet'
                                                  VerticalAlignment='Center'
                                                  VerticalContentAlignment='Center'
                                                  Visibility='{Binding IsSelected, Converter={StaticResource booleanToVisibilityConverter},ConverterParameter=HideInsteadOfCollapse}' />
                                    </StackPanel>
                                </StackPanel>
                                <Expander IsExpanded='{Binding HasFeedbackText, Mode=OneWay}'>
                                    <TextBox Text='{Binding CurrentStatusText, Mode=OneWay}'
                                             ScrollViewer.CanContentScroll='True'
                                             ScrollViewer.HorizontalScrollBarVisibility='Auto'
                                             ScrollViewer.VerticalScrollBarVisibility='Auto'
                                             MaxHeight='300'
                                             FontSize='9'
                                             IsReadOnly='True' />
                                </Expander>
                            </DockPanel>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}"
                                         Value="True">
                                <!--<Setter Property="Background"
											TargetName="borderMainItemBorder"
											Value='{StaticResource ItemHoverBackgroundBrush}' />-->
                                <Setter Property='BorderBrush'
                                        TargetName='borderMainItemBorder'
                                        Value='#aaa' />
                                <Setter Property='Opacity'
                                        TargetName='checkboxIsSelected'
                                        Value='1' />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}"
                                         Value="True">
                                <!--<Setter Property="Background"
										TargetName="borderMainItemBorder"
										Value='{StaticResource ItemHoverBackgroundBrush}' />-->
                                <!--<Setter Property='BorderThickness'
										TargetName='borderMainItemBorder'
										Value='2' />-->
                                <Setter Property='BorderBrush'
                                        TargetName='borderMainItemBorder'
                                        Value='#333' />
                                <Setter Property='Opacity'
                                        TargetName='checkboxIsSelected'
                                        Value='1' />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Focusable"
                                Value="False" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost='True'
								   Width='{Binding (FrameworkElement.ActualWidth),RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}'
								   ItemWidth='{Binding (ListView.View).ItemWidth,RelativeSource={RelativeSource AncestorType=ListView}}'
								   ItemHeight='{Binding (ListView.View).ItemHeight,RelativeSource={RelativeSource AncestorType=ListView}}'/>
                        <!--<UniformGrid IsItemsHost='True'
                                     Columns='2'
                                     Width='{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}' />-->
                    </ItemsPanelTemplate>
                </TreeView.ItemsPanel>
            </TreeView>
        </Grid>
    </DockPanel>
</Window>
